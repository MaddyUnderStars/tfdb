// -------------------------------------------------------
// Events
// -------------------------------------------------------
//
// In order to further customize the rocket types, you can
// set a command to be executed when a certain event happens
// with a dodgeball rocket.
//
// The events that are right now implemented are the following :
//
// on spawn     - When a rocket spawns.
// on deflect   - A client has deflected a rocket.
// on kill      - One of the rockets has killed the client.
// on explode   - Same as on kill, only triggered once.
// on no target - When a rocket has an invalid target.
//              - The target parameter "@target" will be the new target of the rocket.
// on destroyed - When a rocket explodes and does not kill anyone.
//              - As a result, the rocket entity parameter "@rocket" will always be -1.
//              - The target parameter "@target" will be the player who touched the rocket.
//              - Requires the extra events plugin.
//
// The possible parameters passed for the commands are the following :
//
// @name          - [String]  : Name of the projectile type
// @rocket        - [Integer] : Rocket entity index
// @owner         - [Integer] : Owner client index
// @target        - [Integer] : Target client index
// @dead          - [Integer] : Last dead client index
// @deflections   - [Integer] : Number of rocket deflections
// @speed         - [Float]   : Speed of the rocket with limit
// @mphspeed      - [Integer] : Speed of the rocket in MpH without limit
// @capmphspeed   - [Integer] : Speed of the rocket in Mph with limit
// @nocapspeed    - [Float]   : Speed of the rocket without limit (conversion from MpH)
// @2dspeed       - [Float]   : Speed of the rocket with limit that has only 2 decimal numbers
// @2dnocapspeed  - [Float]   : Speed of the rocket without limit that has only 2 decimal numbers
//
// -------------------------------------------------------
// Commands
// -------------------------------------------------------
//
// For using with the events system, the plugin has some useful
// commands if you want to make kickass explosion blasts.
//
// tf_dodgeball_explosion <client>
// Shows a huge explosion at the location of the specified client.
//
// tf_dodgeball_shockwave <client> <damage> <force> <radius> <falloff>
// Applies a huge shockwave at the location of the client.
//
// If you are able to write plugins, you can include your custom
// commands too!
//
// -------------------------------------------------------
// Extra information
// -------------------------------------------------------
//
// It is possible to have map specific configuration files by
// creating a config with the name of the map. Keep in mind that
// no previous values are deleted.
//
// If a keyvalue / parameter has a default value and you do not want
// to change it, you can leave the value empty or ignore the parameter
// altogether.
//
// Neutral rockets cannot damage teammates unless "mp_friendlyfire"
// is set to 1.
// -------------------------------------------------------

"tf2_dodgeball"
{

    "general"
    {
        "music"                            "0"      // Play music on Dodgeball gamemode?
        
        "round start"                      ""       // Music to play on round start (before gameplay start)
        "round end (win)"                  ""       // Music to play for the winner team
        "round end (lose)"                 ""       // Music to play for the loser team
        "gameplay"                         ""       // Music to play when the gameplay starts. This one stops
                                                    // at round end.
        
        "use web player"                   "0"      // If the use of web player is enabled, these will be
        "web player url"                   ""       // used instead of the gameplay music
    }
    
    "classes"
    {
        "common"
        {
            // >>> Basic parameters <<<
             "name"                        "Homing Rocket"    // Full name of the rocket type
            "behaviour"                   "homing"           // The only behaviour right now is homing :P
                                                             // There are 2 types of homing : smooth homing ("homing") and classic homing ("legacy homing")
            
            "model"                       ""                 // Default: Common rocket model
            "is animated"                 "0"                // Only works when using a custom model (Default : 0)
            
            // Trails section. Only usable if the trails plugin is installed.
            // Remove the comments (//) before the keys (ex. "trail particle") if you want to use this section.
            
            //"trail particle"              ""                 // Particle for particle trail (Default : no custom particle trail)
                                                             // Not all particles are going to work
            
            //"trail sprite"                ""                 // Sprite path for sprite trail (Default : no custom sprite trail)
            //"custom color"                ""                 // Custom color for the sprite trail (Default : [255 255 255])
            //"sprite lifetime"             ""                 // Custom lifetime for sprite trail (Default : 1.0 seconds)
            //"sprite start width"          ""                 // Custom start width for sprite trail (Default : 6.0 units)
            //"sprite end width"            ""                 // Custom end width for sprite trail (Default : 15.0 units)
            //"texture resolution"          ""                 // Custom texture resolution (Default : 0.05)
            
            // You can also insert custom keyvalue pairs for the "env_spritetrail" entity in this section 
            //"entity keyvalues"
            //{
                // For example, this replaces the sprite set in the "trail sprite" key with "materials/sprites/laser.vmt"
                // "spritename" "materials/sprites/laser.vmt"
                
                // Check https://developer.valvesoftware.com/wiki/Env_spritetrail for more info.
            //}
            
            //"remove particles"            "1"                 // Remove the default rocket particles? (Default : 0)
            //"replace particles"           ""                 // Replace the default rocket particles? Works only if they have been removed (Default : 0)
                                                             // Creates a clone of the rocket and adds crit glows
            
            // Trails section end.
            
            "play spawn sound"            "1"                // Does the rocket emit a sound when spawning? (Default : 0)
            "play beep sound"             "1"                // Does the rocket emit a beeping sound? (Default : 0)
            "play alert sound"            "1"                // Does the rocket emit an alert sound to the client when being targetted? (Default : 0)
            "spawn sound"                 ""                 // Default: Sentry rocket sound
            "beep sound"                  ""                 // Default: Sentry searching sound
            "alert sound"                 ""                 // Default: Sentry client spotted sound
            "beep interval"               "0"                // Emit sound every x time (Default : 0.5 seconds)
            
            // >>> Specific behaviour modificators <<<
            "elevate on deflect"          "0"                // Does the rocket elevate after a deflection? (Default : 0)
            "neutral rocket"              "0"                // Does the rocket have no team based targets? (Default : 0)
            "keep direction"              "1"                // Does the rocket keep its direction after touching a surface? (Default : 0)
            "teamless deflects"           "0"                // Can this rocket be deflected by anyone? Same as neutral but targeting is not affected. (Default : 0)
            "reset bounces"               "1"                // Does this rocket reset its internal bounces count on deflect? (Default : 0)
            "no bounce drags"             "0"                // Can you drag this rocket after it touched a surface? Does not affect "legacy homing" rockets. (Default : 0)
            "can be stolen"               "1"                // Can you steal this rocket from its target? (Default : 0)
            "steal team check"            "0"                // Checks if the stealer and the target are on the same team. (Default : 0)
                                                             // Useful for neutral rockets.
            
            // >>> Movement parameters <<<
            "damage"                      "30"               // Base damage done by the rocket.
            "damage increment"            "25"               // Increment per reflection.
                                                             // Damage is multiplied by 3 if the rocket is critical.
            
            "speed"                       "1000"              // Base speed for the rocket.
            "speed increment"             "160"              // Speed increment per reflection.
            "speed limit"                 "0"                // Speed limit for the rocket (0 to disable speed limiting)
            
            "turn rate"                   "0.20"            // Turn rate / tick for this rocket.
            "turn rate increment"         "0.04"           // Increment per reflection.
            "turn rate limit"             "0"                // Maximum turn rate when deflected (0 to disable turn rate limiting)
                                                             // Cannot exceed 1.0 regardless of the actual limit value
            
            "elevation rate"              "0"                // Elevation rate when deflected (if enabled)
            "elevation limit"             "0"                // Maximum elevation when deflected (if enabled)
            
            "control delay"               "0.00"                // Delay until the rocket starts tracking the target after a deflection.
            "drag time min"               "0.01"             // After how many seconds (since deflect) can you drag? Does not affect "legacy homing" rockets.
            "drag time max"               "0.08"             // Max time to drag the rocket. Does not affect "legacy homing" rockets.
            
            "max bounces"                 "100"            // How many times can this rocket bounce?
            "bounce scale"                "1.0"              // How hard should the rocket bounce? (Default : 1.0 multiplier)
            "critical chance"             "100"              // Percentage of chance for a critical rocket.
            
            "no. players modifier"        "0.1"              // Increment based upon the number of players in the server.
            "no. rockets modifier"        "0.1"              // Increment based upon the number of rockets fired since the start of the round.
            "direction to target weight"  "40"              // Weight modifier for target selection, based upon the direction of the rocket
                                                             // to the client.
            
            // >>> Events <<<
            "on spawn"                    ""                 // Actions to execute on rocket spawn.
            "on deflect"                  ""                 // Actions to execute when a rocket is deflected.
            "on kill"                     "tf_dodgeball_print {red}##@target## {white}died at @mphspeed mph to {green}##@owner## {white}(@deflections deflections)"                 // Actions to execute when a rocket kills a client.
            "on explode"                  ""                 // Actions to execute when a rocket kills a client (triggered once).
            "on no target"                ""                 // Actions to execute when a rocket has an invalid target.
            "on destroyed"                ""                 // Actions to execute when a rocket explodes (will not trigger if the player is killed by the rocket).
        }
        
        "nuke"
        {
            // >>> Basic parameters <<<
            "name"                        "Nuke!"
            "behaviour"                   "homing"
            "model"                       "models/custom/dodgeball/nuke/nuke.mdl"
            "is animated"                 "1"
            "trail particle"              ""
            "trail sprite"                ""
            "custom color"                ""
            "remove particles"            "1"
            "replace particles"           ""
            "play spawn sound"            "1"
            "play beep sound"             "1"
            "play alert sound"            "1"
            "spawn sound"                 ""
            "beep sound"                  ""
            "alert sound"                 ""
            "beep interval"               "0.2"
           
            // >>> Specific behaviour modificators <<<
            "elevate on deflect"          "0"
            "neutral rocket"              "0"
            "keep direction"              "1"
            "teamless deflects"           "0"
            "reset bounces"               "0"
            "no bounce drags"             "0"
	    "steal team check"		  "0"           
 
            // >>> Movement parameters <<<
            "damage"                      "200"
            "damage increment"            "200"
            "speed"                       "550"
            "speed increment"             "100"
            "speed limit"                 "0"
            "turn rate"                   "0.233"
            "turn rate increment"         "0.0275"
            "turn rate limit"             "0"
            "elevation rate"              "0.1237"
            "elevation limit"             "0.1237"
            "control delay"               "0"
            "drag time min"               "0.03"
            "drag time max"               "0.03"
            "max bounces"                 "0"
            "critical chance"             "100"
            "no. players modifier"        "0"
            "no. rockets modifier"        "0"
            "direction to target weight"  "25"
            
            // >>> Events <<<
            "on spawn"                    ""
            "on deflect"                  ""
            "on kill"                     ""
            "on explode"                  "tf_dodgeball_explosion @dead ; tf_dodgeball_shockwave @dead 200 1000 1000 600"
            "on no target"                ""
        }
    }
    
    "spawners"
    {
        // >>> Default RED spawner <<<
        "red"
        {
            // >>> Basic parameters <<<
            "max rockets"            "3"                // Max no. of rockets before the spawner can fire another. (Default : 1)
            "interval"               "2.0"              // Minimum time between rocket fires. (Default : 2.0 seconds)
            
            // >>> Chances table <<<
            "common%"                "99"               // Chance to spawn a common rocket
            "nuke%"                  "1"               // Chance to spawn a nuke rocket
        }
        
        // >>> Default BLU spawner <<<
        "blu"
        {
            // >>> Basic parameters <<<
            "max rockets"            "3"               // Max no. of rockets before the spawner can fire another.
            "interval"               "2.0"             // Minimum time between rocket fires.
            
            // >>> Chances table <<<
            "common%"                "99"              // Chance to spawn a common rocket
            "nuke%"                  "1"              // Chance to spawn a nuke rocket
        }
    }
}
